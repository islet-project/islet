name: islet-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linux-cca:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all branch for worktree
          submodules: true

      - name: Install dependencies
        run: ./scripts/init.sh

      - name: Build linux cca components
        run: ./scripts/fvp-cca -bo -nw=linux -rm=linux -rmm=tf-rmm

  aosp:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all branch for worktree
          submodules: true

      - name: Install dependencies
        run: ./scripts/init.sh

      - name: Build AOSP components
        run: ./scripts/fvp-cca -bo -nw=aosp -rmm=tf-rmm

  tf-a-tests:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all branch for worktree
          submodules: true

      - name: Install dependencies
        run: ./scripts/init.sh

      - name: Run tf-a-tests on normal-world
        run: ./scripts/tests/tf-a-tests.sh

      - uses: actions/upload-artifact@v3
        with:
          path: out/uart*.log

  crates:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: ./scripts/deps/rust.sh

    - name: Run crates test
      run: ./scripts/tests/crates.sh

  rule-checker:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install dependencies
      run: |
        ./scripts/deps/assets.sh
        ./scripts/deps/rust.sh

    - name: Check bash scripts coding-style
      run: ./assets/formatter/shfmt -d -ci -bn -fn `find scripts/. -name *.sh`

    - name: Check local packages and all of its dependencies for errors
      run:
        cargo check --workspace --exclude islet_sdk --exclude rsi_el0

    - name: Check rust coding-style
      run: |
        cd rmm
        cd monitor && cargo fmt -- --check && cd -
        cd armv9a && cargo fmt -- --check && cd -
        cd board/fvp && cargo fmt -- --check

    - uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  sdk:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install dependencies
      run: |
        ./scripts/deps/pkgs.sh
        ./scripts/deps/rust.sh

    - name: Run sdk build (x86_64)
      working-directory: sdk
      run: make simulated

    - name: Run sdk c_examples (x86_64)
      working-directory: sdk
      run: make run-simulated-c

    - name: Run sdk examples (x86_64)
      working-directory: sdk
      run: make run-simulated

    - name: Run sdk test (x86_64)
      working-directory: sdk
      run: make test

    - name: Run sdk build (aarch64)
      working-directory: sdk
      run: make sdk
